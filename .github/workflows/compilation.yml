# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the workflow will run
on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  repository_dispatch:
    types: [run_build]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [
          [macos-15, arm64, bash],
          [ubuntu-latest, x86_64, bash]
        ]
      fail-fast: false
    
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Install Ubuntu packages
        if: matrix.os[0] == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get -y install  \
          #dreamcast
          gawk \
          patch \
          bzip2 \
          tar \
          make \
          libgmp-dev \
          libmpfr-dev \
          libmpc-dev \
          gettext \
          wget \
          libelf-dev \
          texinfo \
          bison \
          flex \
          sed \
          git \
          build-essential \
          diffutils \
          curl \
          libjpeg-dev \
          libpng-dev \
          python3 \
          pkg-config \
          cmake \
          libisofs-dev \
          meson \
          ninja-build \
          rake \
          #ps2 additional
          autopoint \
          autoconf \
          automake \
          libgmp3-dev \
          #psp additional
          libusb-1.0-0-dev \
          libreadline-dev \
          libcurl4 \
          libcurl4-openssl-dev \
          libssl-dev \
          libarchive-dev \
          libgpgme-dev \
          python3-pip \
          python3-venv \
          libncurses-dev \
          pkg-config \
          libtool \
          libz-dev \
          #orbisdev
          findutils 
      - name: Install macport
        if: startsWith(matrix.os[0], 'macos')
        run: |
          curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
          source ./macports-ci install --remove-brew --version=2.11.5
          sudo port install autoconf automake libtool gsl gmp mpfr libmpc curl wget gettext texinfo libelf libjpeg-turbo libpng cmake meson texinfo bison flex gsed  md5sha1sum
      
      - name: Runs all the stages in the shell
        run: |
          ./build.sh
      
      - name: Get short SHA
        id: slug
        run: echo "sha8=${MSYSTEM}-sha[$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT
      
      - name: Prepare dcdev folder
        run: |
          cd /usr/local
          sudo tar -zcvf dcdev-${{matrix.os[0]}}.tar.gz dcdev

      - uses: actions/upload-artifact@v4
        with:
          name: dcdev-${{matrix.os[0]}}-dcdev-${{matrix.os[1]}}-${{ steps.slug.outputs.sha8 }}
          path: /usr/local/dcdev-${{matrix.os[0]}}.tar.gz

      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Create pre-release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v2
        with:
          files: dcdev-${{matrix.os[0]}}.tar.gz
          prerelease: true
          name: "Development build"
          tag_name: "latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dcdev-${{matrix.os[0]}}.tar.gz
          tag_name: ${{ steps.tag.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
